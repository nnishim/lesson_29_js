"use strict"
// let num = 10.5, num2 = 20;
// let result = num + num2;
// console.log(result);

/**********************************************************************************************************/

// let firstName = `–ù—É—Ä—Å—É–ª—Ç–∞–Ω`,
// 		age = 17,
// 		text = `–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç ${firstName}, –º–Ω–µ ${age} –ª–µ—Ç!`;
// console.log(text);

/**********************************************************************************************************/

// let num1 = parseInt(prompt(`–£–∫–∞–∂–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ`)),
// 		num2 = parseInt(prompt(`–£–∫–∞–∂–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ`));
// let result1 = num1 + num2,
// 		result2 = num1 - num2,
// 		result3 = num1 * num2,
// 		result4 = num1 / num2;
// let message = `
// ${num1} + ${num2} = ${result1}
// ${num1} - ${num2} = ${result2}
// ${num1} * ${num2} = ${result3}
// ${num1} : ${num2} = ${result4}
// `;
// alert(message);

/**********************************************************************************************************/

// let number = 50, strNum = '50';
// let result = number + strNum;
// console.log(result);

/**********************************************************************************************************/

// let number = parseInt(prompt('–£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ'));
// console.log(typeof number);

/**********************************************************************************************************/

// let username = prompt('–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ª–æ–≥–∏–Ω');

// if (username === 'admin') {
// 	console.log('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å');
// } else {
// 	console.log('–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω');
// }

/**********************************************************************************************************/

// let number = parseInt( prompt(`–£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10`) );

// if (number >= 1 && number <= 10) {
// 	console.log(`–í–∞—à–µ —á–∏—Å–ª–æ ${number}`);
// } else {
// 	console.log(`–í–≤–µ–¥–∏–Ω—ã –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ`);
// }

/**********************************************************************************************************/

// let isAgree = confirm(`–í—ã —Å–æ–≥–∞—Å–Ω—ã —Å —É—Å–ª–æ–≤–∏—è–º–∏?`);

// if (!isAgree) {
// 	console.log(`–í—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å —É—Å–ª–æ–≤–∏—è–º–∏`);
// } else {
// 	console.log(`–í—ã —Å–æ–≥–ª–∞—Å–Ω—ã —Å —É–ª—Å–æ–≤–∏—è–º–∏`);
// }

/**********************************************************************************************************/

// let age = +prompt(`–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ —á–∏—Å–ª–æ`);

// if (age <= 10) {
// 	console.log(`–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –º—É–ª—å—Ç—Ñ–∏–ª—å–º "–ë–æ—Å—Å –º–æ–ª–æ–∫–æ—Å–æ—Å"`);
// } else if (age <= 40 ) {
// 	console.log(`–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ "–ò–≥—Ä—É –∫–∞–ª—å–º–∞—Ä–∞"`);
// } else if (age <= 60){
// 	console.log(`–ß–µ–∫–Ω–∏—Ç–µ –¢–∏—Ç–∞–Ω–∏–∫`);
// } else {
// 	console.log(`–ß–µ–∫–∞–π—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ`);
// }

/**********************************************************************************************************/

// let day = +prompt(`–£–∫–∞–∂–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –æ—Ç 1 –¥–æ 7`);

// switch (day) {
// 	case 1 : console.log(`–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫`); break;
// 	case 2 : console.log(`–í—Ç–æ—Ä–Ω–∏–∫`); break;
// 	case 3 : console.log(`–°—Ä–µ–¥–∞`); break;
// 	case 4 : console.log(`–ß–µ—Ç–≤–µ—Ä–≥`); break;
// 	case 5 : console.log(`–ü—è—Ç–Ω–∏—Ü–∞`); break;
// 	case 6 : console.log(`–°—É–±–±–æ—Ç–∞`); break;
// 	case 7 : console.log(`–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ`); break;

// 	default: console.log(`–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –¥–Ω—è –Ω–µ–¥–µ–ª–∏`);
// }

/**********************************************************************************************************/

// let isAgree = confirm(`–í—ã —Å–æ–≥–ª–∞—Å–Ω—ã —Å —É—Å–ª–æ–≤–∏–µ–º –∫—Ä–µ–¥–∏—Ç–µ`);

// let result = null;

// if (isAgree) {
// 	result = `–°–æ–≥–ª–∞—Å–∏–ª—Å—è`;
// } else {
// 	result = `–ù–µ —Å–æ–≥–ª–∞—Å–∏–ª—Å—è`;
// }

// let result = isAgree ? "–°–æ–≥–ª–∞—Å–∏–ª—Å—è" : "–ù–µ —Å–æ–≥–ª–∞—Å–∏–ª—Å—è";

// console.log(result);

/**********************************************************************************************************/

// let username = prompt(`–£–∫–∞–∂–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`) || `–≥–æ—Å—Ç—å`;

// console.log(username);

/**********************************************************************************************************/

// let 
// 	total = 500, 
// 	cash =  `–Ω–∞–ª–∏—á–Ω—ã–º–∏`,
// 	cashText = 450,
// 	cardCash = `–∫–∞—Ä—Ç–æ–π`;
// let buy = prompt(`–ö–∞—Ä—Ç–æ–π –∏–ª–∏ –Ω–∞–ª–∏—á–Ω—ã–º–∏?`);
// if (buy == `${cardCash}`|| buy >= total){
// 	alert(`–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ`);
// } else {
// 	alert(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤`);
// }

/**********************************************************************************************************/

// let solution = prompt(`–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 2 + 2 / 2?`);
// if (+solution === 3 || solution == `three`) {
// 	alert(`–í–µ—Ä–Ω–æ!`);
// } else {
// 	alert(`–ù–µ–≤–µ—Ä–Ω–æ(`);
// }

/**********************************************************************************************************/

// let speed = +prompt(`–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 9`);
// switch (speed) {
// 	case 1:
// 	case 2:
// 	case 3: alert(`–ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å`); break;
// 	case 4:
// 	case 5:
// 	case 6: alert(`–°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å`); break;
// 	case 7:
// 	case 8:
// 	case 9: alert(`–í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å`); break;
// 	default: alert(`–ù–µ—Ç —Ç–∞–∫–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏`);
// }

/**********************************************************************************************************/

// let numbers = [1,2,3,4,5,6];

// let fruits = [`banana`, `mandarin`, `apple`, `ananas`];

// let copy = [...numbers, ...fruits];
// console.log(copy);

/**********************************************************************************************************/

// const user = {
// 	name: `Mike`,
// 	age: 20,
// 	isMarried: true,
// 	social: {
// 		fb: `http://fb.com/mike`,
// 		twitter: `http://twitter.com/mike`
// 	}
// };
// let username = user.name;
// console.log(user.social.twitter);

/**********************************************************************************************************/

// let water = 0;

// do {
// 	console.log(`–ù–∞–ª–∏–≤–∞–µ–º 1–ª –≤–æ–¥—ã –≤ –≤–µ–¥—Ä–æ`);
// 	water++;
// } while (water < 10);

/**********************************************************************************************************/

// for (let index = 0; index < 4; index++) {
// 	console.log(index);
// }

// for (let item of fruits){
// 	console.log(item);
// }

/**********************************************************************************************************/

// let table = ``;
// for (let i = 1; i <= 9; i++){
// 	for(let j = 1; j <= 9; j++){
// 		table += (i*j) + ` `;
// 	}
// 	table +=`\n`;
// }
// console.log(table);

/**********************************************************************************************************/

// let isHot = confirm(`–≤–∞–º –∂–∞—Ä–∫–æ, —Ö–æ—Ç–∏—Ç–µ –º–æ—Ä–æ–∂–µ–Ω–æ–µ?`);
// if (isHot) {
// 	let iceCream = prompt(`–ö–∞–∫–æ–µ –º–æ—Ä–æ–∂–µ–Ω–æ–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?(—à–æ–∫–æ–ª–∞–¥–Ω–æ–µ | –≤–∞–Ω–∏–ª—å–Ω–æ–µ | —Ñ—Ä—É–∫—Ç–æ–≤–æ–µ)`);
// 	switch (iceCream) {
// 		case `—à–æ–∫–æ–ª–∞–¥–Ω–æ–µ`: alert(`–≤–æ—Ç —à–æ–∫–æ–ª–∞–¥–Ω–æ–µ`); break;
// 		case `–≤–∞–Ω–∏–ª—å–Ω–æ–µ`: alert(`–≤–æ—Ç –≤–∞–Ω–∏–ª—å–Ω–æ–µ`); break;
// 		case `—Ñ—Ä—É–∫—Ç–æ–≤–æ–µ`: alert(`–≤–æ—Ç —Ñ—Ä—É–∫—Ç–æ–≤–æ–µ`); break;
// 		default: alert(`–Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –º–æ—Ä–æ–∂–µ–Ω–Ω–æ–≥–æ`);
// 	}
// }else{
// 	alert(`–Ω–µ —Ö–æ—Ç–∏—Ç–µ –∫–∞–∫ —Ö–æ—Ç–∏—Ç–µ`);
// }

/**********************************************************************************************************/

// let skills = [`—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–æ—Å—ã`, `—Å–ø–∞—Ç—å`, `–≤–µ—Ä—Å—Ç–∞—Ç—å`];
// console.log(`–Ø —É–º–µ—é`, skills[2], `, –ª—é–±–ª—é`, skills[1], `, –Ω—Ä–∞–≤–∏—Ç—Å—è`, skills[0]);

/**********************************************************************************************************/

// const hero = {
// 	name: `–¢–æ—Ä`,
// 	age: 1000,
// 	superStrong: `–ì—Ä–æ–º`,
// 	wins:{
// 		win1: `–°–µ—Å—Ç—Ä—É`,
// 		win2: `–∫–æ–≥–æ-—Ç–æ`,
// 		win3: `–∫–æ–≥–æ-—Ç–æ`
// 	}
// }
// console.log(`–ü—Ä–∏–≤–µ—Ç –º–µ–Ω—è –∑–æ–≤—É—Ç`, hero.name);
// console.log(`–ú–Ω–µ`, hero.age, `–ª–µ—Ç`);
// console.log(`–ú–æ—è —Å—É–ø–µ—Ä —Å–∏–ª–∞`, hero.superStrong );
// console.log(`–Ø –ø–æ–±–µ–¥–∏–ª:`, hero.wins.win1, hero.wins.win2, hero.wins.win3 );

/**********************************************************************************************************/

// let user = prompt(`–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω`);
// if (user === `root`) {
// 	let pass = prompt(`–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å`);
// 	if (pass === `secret`) {
// 		alert(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!`);
// 	} else {
// 		alert(`–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å`);
// 	}
// } else if (user === ``){
// 	alert(`–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω`);
// } else {
// 	alert(`–í—Ö–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω`)
// }

/**********************************************************************************************************/

// let shots = [
// 	`–ø–æ–ø–∞–ª`,
// 	`–ø–æ–ø–∞–ª`,
// 	`–ø—Ä–æ–º–∞—Ö`,
// 	`–ø–æ–ø–∞–ª`,
// 	`–ø—Ä–æ–º–∞—Ö`,
// 	`–ø–æ–ø–∞–ª`,
// 	`–ø—Ä–æ–º–∞—Ö`,
// ];
// let hits = 0;
// let miss = 0;
// for(let i = 0; i < shots.length; i++){
// 	let shot = shots[i];
// 	if (shot === shots[i]) {
// 		console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø–∞–¥–∞–Ω–∏–π:${shot}`);
// 	} else {
// 		console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–º–∞—Ö–æ–≤:${shot}`);
// 	}
// }

/**********************************************************************************************************/

// let symbol = prompt(`–í–≤–µ–¥–∏—Ç–µ —Å–∏–º–≤–æ–ª`);
// let result = ``;
// for (let i = 0; i <= 7; i++) {
// 	for (let j = 0; j <= 21; j++){
// 		if (i === 3 && j === 11) {
// 			result += `üòÅ`;
// 		} else {
// 			result += symbol;
// 		}
// 	}
// 	result += `\n`;
// }
// alert(result);

/**********************************************************************************************************/

// let number1 = +prompt(`–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ`);
// let number2 = +prompt(`–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ`);
// if (number1 > number2) {
// 	alert(`–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ —á–µ–º –≤—Ç–æ—Ä–æ–µ`);
// } else if (number1 < number2){
// 	alert(`–í—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –ø–µ—Ä–≤–æ–≥–æ`);
// } else {
// 	alert(`–≠—Ç–∏ —á–∏—Å–ª–∞ —Ä–∞–≤–Ω—ã`);
// }

/**********************************************************************************************************/

// let dice1 = Math.floor(Math.random() * 3 + 1);
// let dice2 = Math.floor(Math.random() * 3 + 1);
// let dice3 = Math.floor(Math.random() * 3 + 1);
// if (dice1 === dice2 && dice2 === dice3) {
	// 	console.log(`–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏`);
	// } else {
		// 	console.log(``);
// }
// console.log(dice1, dice2, dice3);

/**********************************************************************************************************/

// let random1 = Math.floor(Math.random() * 9 + 1);
// let random2 = Math.floor(Math.random() * 9 + 1);
// let table = +prompt(`${random1} * ${random2}`);
// if (random1 * random2 === table) {
// 	alert(`–í–µ—Ä–Ω–æ`);
// } else {
// 	alert(`–ù–µ–≤–µ—Ä–Ω–æ`);
// }

/**********************************************************************************************************/

// let random1 = Math.floor(Math.random() * 9 + 1);
// let random2 = Math.floor(Math.random() * 9 + 1);
// let table = prompt(`${random1} * ${random2}`);
// while (true) {
// 	if (table === null) {
	// 		break;
	// 	}
	// 	table = parseInt(`${random1} * ${random2}`);
	// 	if (table <= 1000) {
// 		+prompt(`${random1} * ${random2}`)
// 	}
// }

/**********************************************************************************************************/

// let getMessage = function () {
// 	console.log(`Hello function`);
// }
// getMessage();

/**********************************************************************************************************/

// function getMessage() {
// 	console.log(`hello function`);
// }
// getMessage();

/**********************************************************************************************************/

// let getMessage = () => {
// 	console.log(`hello arrow function`);
// };

/**********************************************************************************************************/

// let getRandomNumberFromOneTo = function (limit) {
// 	return Math.floor(Math.random() * limit + 1);
// };
// let result = getRandomNumberFromOneTo(10);
// let result2 = getRandomNumberFromOneTo(100);
// console.log(result, result2);

/**********************************************************************************************************/

// function askForNumber(message,min,max) {
// 	let number;

// 	do {
// 		number = +(prompt(message));
// 	} while (!number || number < min || number > max);
// 	return number;
// }

// let result = askForNumber(`–£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10`, 1, 10);

// console.log(result);

/**********************************************************************************************************/

// let animals = [
// 	{name: `Cows`, amount: 7, width: 3},
// 	{name: `Chickens`, amount: 30, width: 3},
// 	{name: `Sheeps`, amount: 20, width: 4},
// 	{name: `Hourses`, amount: 2, width: 2}
// ];

// let fruits = [
// 	{name: `Banana`, amount: 3, width: 3},
// 	{name: `cherry`, amount: 2, width: 3},
// 	{name: `apple`, amount: 7, width: 4},
// 	{name: `pineapple`, amount: 9, width: 2}
// ];

// function printFarmInventory(data ) {
// 	for (let item of data) {
// 		console.log(zeroFill(item.amount, item.width) + ` ` + item.name);
// 	}
// }

// function zeroFill(number, width) {
// 	let string = String(number);
// 	while (string.length < width) {
// 		string = `0` + string;
// 	}
// 	return string;
// }

// printFarmInventory(animals);
// console.log(`--------------------------------`);
// printFarmInventory(fruits);


